LETTER_TEMPLATES = {
    "A": [((0, 0), (0.5, 1)), ((0.5, 1), (1, 0)), ((0.25, 0.5), (0.75, 0.5))],
    "B": [((0, 0), (0, 1)), ((0, 1), (0.6, 0.85)), ((0.6, 0.85), (0, 0.5)),
          ((0, 0.5), (0.6, 0.35)), ((0.6, 0.35), (0, 0))],
    "C": [((1, 1), (0, 1)), ((0, 1), (0, 0)), ((0, 0), (1, 0))],
    "D": [((0, 0), (0, 1)), ((0, 1), (0.8, 0.8)), ((0.8, 0.8), (0.8, 0.2)), ((0.8, 0.2), (0, 0))],
    "E": [((1, 1), (0, 1)), ((0, 1), (0, 0)), ((0, 0), (1, 0)), ((0, 0.5), (0.7, 0.5))],
    "F": [((0, 0), (0, 1)), ((0, 1), (1, 1)), ((0, 0.5), (0.7, 0.5))],
    "G": [((1, 1), (0, 1)), ((0, 1), (0, 0)), ((0, 0), (1, 0)), ((1, 0), (1, 0.5)), ((1, 0.5), (0.5, 0.5))],
    "H": [((0, 0), (0, 1)), ((1, 0), (1, 1)), ((0, 0.5), (1, 0.5))],
    "I": [((0.5, 0), (0.5, 1)), ((0.2, 1), (0.8, 1)), ((0.2, 0), (0.8, 0))],
    "J": [((1, 1), (1, 0.2)), ((1, 0.2), (0.5, 0)), ((0.5, 0), (0, 0.2))],
    "K": [((0, 0), (0, 1)), ((0, 0.5), (1, 1)), ((0, 0.5), (1, 0))],
    "L": [((0, 1), (0, 0)), ((0, 0), (1, 0))],
    "M": [((0, 0), (0, 1)), ((0, 1), (0.5, 0.5)), ((0.5, 0.5), (1, 1)), ((1, 1), (1, 0))],
    "N": [((0, 0), (0, 1)), ((0, 1), (1, 0)), ((1, 0), (1, 1))],
    "O": [((0, 0), (1, 0)), ((1, 0), (1, 1)), ((1, 1), (0, 1)), ((0, 1), (0, 0))],
    "P": [((0, 0), (0, 1)), ((0, 1), (0.6, 1)), ((0.6, 1), (0.6, 0.5)), ((0.6, 0.5), (0, 0.5))],
    "Q": [((0, 0), (1, 0)), ((1, 0), (1, 1)), ((1, 1), (0, 1)), ((0, 1), (0, 0)), ((0.5, 0.5), (1, 0))],
    "R": [((0, 0), (0, 1)), ((0, 1), (0.6, 1)), ((0.6, 1), (0.6, 0.5)), ((0.6, 0.5), (0, 0.5)), ((0, 0.5), (1, 0))],
    "S": [((1, 1), (0, 1)), ((0, 1), (0, 0.5)), ((0, 0.5), (1, 0.5)), ((1, 0.5), (1, 0)), ((1, 0), (0, 0))],
    "T": [((0, 1), (1, 1)), ((0.5, 1), (0.5, 0))],
    "U": [((0, 1), (0, 0)), ((0, 0), (1, 0)), ((1, 0), (1, 1))],
    "V": [((0, 1), (0.5, 0)), ((0.5, 0), (1, 1))],
    "W": [((0, 1), (0.3, 0)), ((0.3, 0), (0.5, 0.6)), ((0.5, 0.6), (0.7, 0)), ((0.7, 0), (1, 1))],
    "X": [((0, 0), (1, 1)), ((0, 1), (1, 0))],
    "Y": [((0, 1), (0.5, 0.5)), ((1, 1), (0.5, 0.5)), ((0.5, 0.5), (0.5, 0))],
    "Z": [((0, 1), (1, 1)), ((1, 1), (0, 0)), ((0, 0), (1, 0))],
}

def text_to_strokes(text):
    strokes = []
    cursor = 0.0
    scale_x = 0.02
    scale_y = 0.04
    space = 0.005

    for char in text:
        if char == " ":
            cursor += scale_x + space
            continue
        if char not in LETTER_TEMPLATES:
            print("Skipping unsupported character:", char)
            continue

        for start, end in LETTER_TEMPLATES[char]:
            x1 = cursor + start[0] * scale_x
            y1 = start[1] * scale_y
            x2 = cursor + end[0] * scale_x
            y2 = end[1] * scale_y
            strokes.append(((x1, y1), (x2, y2)))

        cursor += scale_x + space

    return strokes

if __name__ == "__main__":
    try:
        with open("recognized_text.txt", "r") as f:
            text = f.read().strip().upper()
    except FileNotFoundError:
        print("recognized_text.txt not found.")
        exit()

    strokes = text_to_strokes(text)
    print(f"Generated {len(strokes)} strokes for '{text}'")
    for i, (p1, p2) in enumerate(strokes):
        print(f"{i+1}. From {p1} to {p2}")
